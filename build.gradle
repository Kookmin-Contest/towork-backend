plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.1'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.backend'
version = '0.0.1-SNAPSHOT'
jar.enabled = false

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring MVC, REST, TOMCAT
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// WebFlux: MVC와 다른 방식으로 요청을 처리
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// application.yml 자동완성
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	// security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// debug
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// docs
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

	// database
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'mysql:mysql-connector-java:8.0.32'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// JWT token
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// querydsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// Mapstruct: DTO <-> Entity 변환
	implementation 'org.mapstruct:mapstruct:1.4.2.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'

	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation "org.junit.jupiter:junit-jupiter:5.8.1"
	testImplementation "org.testcontainers:junit-jupiter:1.18.3"
	testImplementation 'org.testcontainers:testcontainers:1.18.3'
	testImplementation "org.testcontainers:mysql:1.18.3"

}

// Querydsl 설정부
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile).configureEach {
	options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
	main.java.srcDirs += [ generated ]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
	delete file(generated)
}

tasks.named('test') {
	useJUnitPlatform()
}
